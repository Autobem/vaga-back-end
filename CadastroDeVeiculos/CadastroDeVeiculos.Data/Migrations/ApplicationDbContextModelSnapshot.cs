// <auto-generated />
using CadastroDeVeiculos.Data.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadastroDeVeiculos.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Document")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Client_Document");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Client_Email");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Client_Phone");

                    b.HasKey("Id")
                        .HasName("Pk_Client");

                    b.HasIndex("Document")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("User_Email");

                    b.Property<string>("LoginData")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("User_Login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("User_Password");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("User_Role");

                    b.HasKey("Id")
                        .HasName("Pk_User");

                    b.HasIndex("LoginData")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("varchar(70)")
                        .HasColumnName("Vehicle_Manufacture");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vehicle_Model");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("Vehicle_Plate");

                    b.Property<int>("YearOfManufacturer")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("Vehicle_Year");

                    b.HasKey("Id")
                        .HasName("Pk_Vehicle");

                    b.HasIndex("ClientId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.Client", b =>
                {
                    b.OwnsOne("CadastroDeVeiculos.Domain.ValueObject.Name", "Name", b1 =>
                        {
                            b1.Property<int>("ClientId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .IsUnicode(true)
                                .HasColumnType("varchar(80)")
                                .HasColumnName("First_Name");

                            b1.Property<string>("Lastname")
                                .IsRequired()
                                .IsUnicode(true)
                                .HasColumnType("varchar(80)")
                                .HasColumnName("Lastname");

                            b1.HasKey("ClientId");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("Name");
                });

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("CadastroDeVeiculos.Domain.Entities.Client", "Client")
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CadastroDeVeiculos.Domain.Entities.Client", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
